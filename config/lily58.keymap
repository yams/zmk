#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4    &kp N5                                &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E    &kp R     &kp T                                 &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL  &kp A   &kp S   &kp D    &kp F     &kp G                                 &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z   &kp X   &kp C    &kp V     &kp B   &kp LEFT_ALT    &kp CAPSLOCK  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp ESC  &kp LGUI  &mo 1   &mo 2           &kp APOS      &kp SPACE  &kp MINUS  &kp EQUAL
            >;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans        &trans         &trans        &kp LBKT         &kp RBKT     &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12                    &trans        &trans         &trans        &kp LC(LS(TAB))  &kp LC(TAB)  &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &kp LEFT      &kp DOWN       &kp UP_ARROW  &kp RIGHT        &trans       &trans
&trans  &trans  &trans  &trans   &trans   &trans   &trans    &trans  &kp LG(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP   &kp LG(RIGHT)    &trans       &trans
                        &trans   &trans   &trans   &trans    &trans  &trans        &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_NXT                    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_PRV                    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR     &trans         &trans         &trans         &trans         &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans         &trans         &trans         &trans         &trans         &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans         &trans         &trans      &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
